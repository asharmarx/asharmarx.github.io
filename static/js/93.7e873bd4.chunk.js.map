{"version":3,"file":"static/js/93.7e873bd4.chunk.js","mappings":"0JAsBA,IAnBoB,SAAH,GAAoB,IAAdA,EAAM,EAANA,OACnB,GAA4BC,EAAAA,EAAAA,WAAS,GAAM,eAApCC,EAAM,KAAEC,EAAS,KAElBC,EAA4B,QADRC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAlBC,cACkC,wBAA0B,uBAC5DC,GAAaC,EAAAA,EAAAA,MAAbD,SAYR,OAAO,iBAAME,QAXS,WACpB,GAAIC,UAAUC,UACZ,IAEE,OADAD,UAAUC,UAAUC,UAAUR,EAAUG,EAAW,IAAMP,GAAQa,MAAK,kBAAMV,GAAU,EAAK,IACpFW,YAAW,kBAAMX,GAAU,EAAM,GAAE,KAG5C,CAFE,MAAOY,GACP,OAAOC,QAAQC,MAAM,iBACvB,CAEJ,EAEoC,SAAEf,EAAS,aAAe,KAChE,C,sGCdIgB,EAAY,SAAH,GAAgC,IAA1BC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAC5B,OACF,wBACGD,EAAUE,KAAI,SAACC,EAAGC,GAAG,OACpB,0BAAwCD,EAAEE,MAAK,OAAI,cAAGC,OAAO,UAAUC,KAAMJ,EAAEK,KAAK,SAAEL,EAAEK,SAAS,UAArFP,EAAO,qBAAaG,GAAsE,KAG3G,EACKK,EAAU,SAAH,GAA6B,IAAvBC,EAAO,EAAPA,QAAST,EAAO,EAAPA,QACxB,OACI,UAAC,KAAc,YACX,uCACA,gBAAKU,UAAU,UAAS,SACnBD,EAAQR,KAAI,SAACU,EAAIR,GAAG,OAAK,2BAAwC,cAAGE,OAAO,UAAUC,KAAMK,EAAGJ,KAAK,SAAEI,EAAGP,SAAU,UAA3EJ,EAAO,oBAAYG,GAA+D,QAI1I,EAqDA,UAlCkB,WAChB,OAAiBS,EAAAA,EAAAA,IAAS,CACxBC,MAnBgB,iMAsBVC,GAFN,YAFW,GAILA,KACR,GAAkCjC,EAAAA,EAAAA,UAAS,IAAG,eAAvCkC,EAAS,KAAEC,EAAY,KACtBC,GAAS7B,EAAAA,EAAAA,MAAT6B,KAWR,OATAC,EAAAA,EAAAA,YAAU,WACR,OAAIJ,GAAQA,EAAKK,UAAkBH,EAAaF,EAAKK,WAC9C,kBAAM,IAAK,CACpB,GAAG,CAACL,KAEJI,EAAAA,EAAAA,YAAU,WACJD,GAAQF,EAAUK,QAAQ1B,YAAW,WAAO2B,SAASC,eAAeL,EAAKM,MAAM,IAAKC,eAAe,CAAEC,SAAU,UAAW,GAAG,IACnI,GAAE,CAACV,EAAWE,IAEVF,EAAUK,QAEZ,SAAC,KAAgB,UACdL,EAAUd,KAAI,SAACyB,GAAG,eACjB,iBAAKC,GAAID,EAAIC,GAAG,WACd,0BAAKD,EAAItB,OAAM,cAAGE,KAAI,WAAMoB,EAAIC,IAAM,cAAY,OAAM,UAAC,SAAC,IAAW,CAAC/C,OAAQ8C,EAAIC,WAClF,uBAAID,EAAIE,UACM,QAAb,EAAAF,EAAI3B,iBAAS,OAAb,EAAeqB,QAAS,SAACtB,EAAS,CAACC,UAAW2B,EAAI3B,UAAWC,QAAS0B,EAAIC,KAAS,MACpF,kBACY,QAAX,EAAAD,EAAIjB,eAAO,OAAX,EAAaW,QAAS,SAACZ,EAAO,CAACC,QAASiB,EAAIjB,QAAST,QAAS0B,EAAIC,KAAS,OALxDD,EAAIC,GAMpB,MAViB,IAc5B,C","sources":["components/copyDatShiz.jsx","components/whatIRead.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst CopyDatShiz = ({ itemID }) => {\n    const [copied, setCopied] = useState(false);\n    const { REACT_APP_ENV } = process.env;\n    const currURL = REACT_APP_ENV === 'dev' ? \"http://localhost:3000\" : \"https://aman.monster\";\n    const { pathname } = useLocation();\n    const panHandleCopy = () => {\n      if (navigator.clipboard) {\n        try {\n          navigator.clipboard.writeText(currURL + pathname + '#' + itemID).then(() => setCopied(true));\n          return setTimeout(() => setCopied(false), 1500);\n        } catch (e) {\n          return console.error('could not copy');\n        }\n      }\n    };\n  \n    return <span onClick={panHandleCopy}>{copied ? \"copy cap'n\" : '#'}</span>;\n  };\n  \nexport default CopyDatShiz;","import { useState, useEffect } from \"react\";\nimport { useQuery } from 'urql';\nimport { useLocation } from \"react-router-dom\";\nimport { SeeAlsoWrapper, WhatIReadWrapper } from \"../styles/myStyles\";\nimport CopyDatShiz from \"./copyDatShiz\";\n\nconst Resources = ({ resources, topicID }) => {\n    return (\n  <ul>\n    {resources.map((r, idx) => (\n      <li key={`${topicID}.resource.${idx}`}>{r.title} - <a target=\"__blank\" href={r.link}>{r.link}</a></li>\n    ))}\n  </ul>\n)};\nconst SeeAlso = ({ seeAlso, topicID}) => {\n    return (\n        <SeeAlsoWrapper>\n            <h3>See Also:</h3>\n            <div className=\"seeAlso\">\n                {seeAlso.map((sA, idx) => <span key={`${topicID}.seeAlso.${idx}`}><a target=\"__blank\" href={sA.link}>{sA.title}</a></span>)}\n            </div>\n        </SeeAlsoWrapper>\n    )\n};\n\nconst WhatIReadQuery = `\n  query {\n    whatiread {\n      id\n      title\n      summary\n      seeAlso {\n        title\n        link\n      }\n      resources {\n        title\n        link\n      }\n    }\n}`;\n\nconst WhatIRead = () => {\n  const [result] = useQuery({\n    query: WhatIReadQuery,\n  });\n\n  const { data } = result;\n  const [whatIRead, setWhatIRead] = useState([]);\n  const { hash } = useLocation();\n\n  useEffect(() => {\n    if (data && data.whatiread) return setWhatIRead(data.whatiread)\n    return () => null;\n  }, [data])\n\n  useEffect(() => {\n    if (hash && whatIRead.length) setTimeout(() => {document.getElementById(hash.slice(1,)).scrollIntoView({ behavior: \"smooth\"});}, 800);;\n  },[whatIRead, hash]);\n  \n  if(!whatIRead.length) return null;\n  return (\n    <WhatIReadWrapper>\n      {whatIRead.map((wIR) => (\n        <div id={wIR.id} key={wIR.id}>\n          <h1>{wIR.title}<a href={`#${wIR.id}`} aria-hidden=\"true\"><CopyDatShiz itemID={wIR.id}/></a></h1>\n          <p>{wIR.summary}</p>\n          {wIR.resources?.length ? <Resources resources={wIR.resources} topicID={wIR.id} /> : null}\n          <br />\n          {wIR.seeAlso?.length ? <SeeAlso seeAlso={wIR.seeAlso} topicID={wIR.id} /> : null}\n        </div>\n        ))\n      }\n    </WhatIReadWrapper>\n  )};\n\nexport default WhatIRead;\n"],"names":["itemID","useState","copied","setCopied","currURL","process","REACT_APP_ENV","pathname","useLocation","onClick","navigator","clipboard","writeText","then","setTimeout","e","console","error","Resources","resources","topicID","map","r","idx","title","target","href","link","SeeAlso","seeAlso","className","sA","useQuery","query","data","whatIRead","setWhatIRead","hash","useEffect","whatiread","length","document","getElementById","slice","scrollIntoView","behavior","wIR","id","summary"],"sourceRoot":""}